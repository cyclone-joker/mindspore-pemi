# @Time 2023/12/27 20:34
# @Author: Joker
# @File: model_config.py
# @Software: PyCharm

import os


class BertConfig:
    root_path = os.path.abspath(".").replace("model_code", "")
    # pdtb数据集加载位置
    dataset_path = os.path.join(root_path, "model_data/dataset")
    # 最大字符串长度
    max_sequence_len = 512
    # bert输入和输出维度
    bert_input_size = 768
    # bert classifier 隐层维数
    classifier_hidden_size = 3072
    # 微调过后模型的保存位置
    model_save_path = os.path.join(root_path, "model_data/saved_models")
    # 画图暂存的embedding的位置
    plot_embedddings_save_path = os.path.join(root_path, "model_data/plot_embeddings")
    # 应对PDTB二分类类别失衡问题，调整相应的权重系数
    sample_weights = [[1.0, 6.52], [1.0, 3.91], [1.0, 1.87], [1.0, 10]]
    # 保存画图的位置
    figure_save_path = os.path.join(root_path, "model_data/figure")

    init_embeddings_save_path = "model_data/init_embeddings"
    # 保存测试结果路径
    test_res_save_path = os.path.join(root_path, "model_data/res")
    # 检查点保存路径
    checkpoint_save_path = os.path.join(root_path, "model_data/checkpoints")
    # 进行日志保存的位置
    log_save_path = os.path.join(root_path, "model_data/logs")
    # 预训练模型存储位置
    pretrained_model_path = os.path.join(root_path, "model_data/pretrained_model")
    # pretrained_model_path = "model_data/pretrained_model"
    # 用于11-way对照4-way的字典
    convert_dict = {0: 0, 1: 0, 2: 1, 3: 1, 4: 2, 5: 2, 6: 2, 7: 2, 8: 2, 9: 3, 10: 3}
    # top对应second列表
    top2second = [{1: 1901, 0: 215},
                  {2: 3820, 3: 77},
                  {5: 3330, 8: 2875, 6: 1287, 7: 359, 4: 166},
                  {9: 632, 10: 225}]
    # second对应conn字典
    second2conn = [{18: 58, 36: 56, 5: 37, 23: 13, 60: 12, 86: 3, 101: 1, 100: 1, 40: 1, 50: 1},
                   {18: 423, 36: 419, 100: 171, 19: 145, 20: 107, 5: 106, 99: 55, 73: 29, 66: 25, 55: 25, 58: 15, 39: 15, 6: 15, 60: 12, 23: 9, 40: 9, 86: 6, 64: 4, 93: 3, 62: 3, 38: 2, 101: 2, 13: 2, 50: 1, 89: 1, 26: 1, 42: 1, 15: 1},
                   {15: 1453, 81: 644, 7: 280, 10: 208, 79: 159, 21: 151, 94: 137, 91: 88, 0: 46, 51: 13, 35: 11, 40: 10, 2: 9, 53: 7, 89: 6, 50: 5, 88: 4, 18: 4, 32: 4, 48: 3, 41: 3, 6: 3, 87: 2, 45: 2, 96: 2, 83: 2, 29: 2, 8: 2, 30: 1, 25: 1, 26: 1, 28: 1, 95: 1, 11: 1, 71: 1, 34: 1, 54: 1, 4: 1},
                   {15: 28, 7: 8, 40: 7, 79: 5, 53: 4, 51: 4, 29: 3, 94: 1, 81: 1, 17: 1, 42: 1, 32: 1},
                   {55: 88, 73: 49, 68: 7, 4: 1, 18: 1, 20: 1},
                   {6: 740, 40: 391, 4: 375, 100: 341, 34: 279, 37: 178, 58: 116, 53: 107, 59: 63, 77: 42, 18: 36, 33: 33, 48: 17, 7: 14, 57: 13, 50: 13, 36: 13, 17: 11, 67: 9, 69: 8, 1: 6, 46: 6, 85: 6, 71: 6, 45: 5, 81: 5, 27: 4, 89: 4, 42: 2, 15: 2, 19: 2, 99: 2, 76: 2, 56: 2, 101: 1, 32: 1, 96: 1, 21: 1, 78: 1, 41: 1, 2: 1, 60: 1, 52: 1, 14: 1, 55: 1, 88: 1, 0: 1, 26: 1, 5: 1, 97: 1, 10: 1, 86: 1, 13: 1},
                   {29: 593, 30: 369, 42: 50, 85: 18, 40: 15, 53: 8, 32: 5, 65: 2, 27: 1, 6: 1, 7: 1},
                   {6: 304, 100: 11, 27: 6, 58: 4, 37: 2, 4: 2, 26: 2, 5: 1, 30: 1, 34: 1, 40: 1, 19: 1, 15: 1, 89: 1},
                   {85: 872, 42: 457, 40: 227, 53: 197, 41: 169, 45: 114, 88: 87, 29: 58, 7: 27, 46: 26, 67: 26, 73: 21, 30: 17, 48: 16, 69: 11, 15: 10, 27: 9, 96: 8, 32: 6, 89: 4, 70: 4, 6: 4, 36: 4, 81: 3, 5: 3, 98: 3, 65: 2, 68: 2, 94: 2, 0: 2, 79: 2, 34: 2, 47: 1, 33: 1, 10: 1, 23: 1, 24: 1, 18: 1, 26: 1, 91: 1, 51: 1},
                   {89: 305, 72: 84, 87: 38, 22: 19, 56: 12, 2: 11, 26: 9, 61: 7, 80: 5, 50: 5, 96: 5, 98: 4, 3: 3, 100: 3, 6: 3, 16: 3, 24: 3, 81: 2, 48: 2, 58: 1, 90: 1, 84: 1, 27: 1, 99: 1, 25: 1, 20: 1, 40: 1, 18: 1},
                   {58: 83, 100: 49, 7: 26, 14: 21, 98: 11, 13: 7, 6: 2, 78: 2, 89: 1, 49: 1}]

    dataset_split = {"PDTB": [[i for i in range(2, 21)], [0, 1], [21, 22]],
                     "PDTB3": [[i for i in range(2, 21)], [0, 1], [21, 22]]}